// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(SahafDBContext))]
    partial class SahafDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KitapYazar", b =>
                {
                    b.Property<int>("KitaplarKitapID")
                        .HasColumnType("int");

                    b.Property<int>("YazarlarYazarID")
                        .HasColumnType("int");

                    b.HasKey("KitaplarKitapID", "YazarlarYazarID");

                    b.HasIndex("YazarlarYazarID");

                    b.ToTable("KitapYazar");
                });

            modelBuilder.Entity("Models.Kategori", b =>
                {
                    b.Property<int>("KategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KategoriID"));

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("varchar");

                    b.HasKey("KategoriID");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("Models.Kitap", b =>
                {
                    b.Property<int>("KitapID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KitapID"));

                    b.Property<DateTime?>("AlmaTarihi")
                        .HasColumnType("datetime");

                    b.Property<int>("BasimYili")
                        .HasColumnType("int");

                    b.Property<int>("BaskiSayisi")
                        .HasColumnType("int");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("money");

                    b.Property<int>("ISBN")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IadeTarihi")
                        .HasColumnType("datetime");

                    b.Property<int>("KategoriID")
                        .HasColumnType("int");

                    b.Property<string>("KitapAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("KitapOzeti")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar");

                    b.Property<int?>("KullaniciID")
                        .HasColumnType("int");

                    b.Property<int>("YayinEviID")
                        .HasColumnType("int");

                    b.Property<int>("YazarID")
                        .HasColumnType("int");

                    b.HasKey("KitapID");

                    b.HasIndex("KategoriID");

                    b.HasIndex("KullaniciID");

                    b.HasIndex("YayinEviID");

                    b.ToTable("Kitaplar");
                });

            modelBuilder.Entity("Models.Kullanici", b =>
                {
                    b.Property<int>("KullaniciID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KullaniciID"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar");

                    b.Property<string>("KullaniciTipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.HasKey("KullaniciID");

                    b.ToTable("Kullanıcılar");
                });

            modelBuilder.Entity("Models.YayinEvi", b =>
                {
                    b.Property<int>("YayinEviID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YayinEviID"));

                    b.Property<string>("YayinEviAdi")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("varchar");

                    b.HasKey("YayinEviID");

                    b.ToTable("YayınEvleri");
                });

            modelBuilder.Entity("Models.Yazar", b =>
                {
                    b.Property<int>("YazarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YazarID"));

                    b.Property<int>("KitapID")
                        .HasColumnType("int");

                    b.Property<string>("YazarAdi")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("varchar");

                    b.Property<string>("YazarSoyadi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.HasKey("YazarID");

                    b.ToTable("Yazarlar");
                });

            modelBuilder.Entity("KitapYazar", b =>
                {
                    b.HasOne("Models.Kitap", null)
                        .WithMany()
                        .HasForeignKey("KitaplarKitapID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Yazar", null)
                        .WithMany()
                        .HasForeignKey("YazarlarYazarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Kitap", b =>
                {
                    b.HasOne("Models.Kategori", "Kategori")
                        .WithMany("Kitaplar")
                        .HasForeignKey("KategoriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Kullanici", null)
                        .WithMany("OduncAlinanKitaplar")
                        .HasForeignKey("KullaniciID");

                    b.HasOne("Models.YayinEvi", "YayinEvi")
                        .WithMany("Kitaplar")
                        .HasForeignKey("YayinEviID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");

                    b.Navigation("YayinEvi");
                });

            modelBuilder.Entity("Models.Kategori", b =>
                {
                    b.Navigation("Kitaplar");
                });

            modelBuilder.Entity("Models.Kullanici", b =>
                {
                    b.Navigation("OduncAlinanKitaplar");
                });

            modelBuilder.Entity("Models.YayinEvi", b =>
                {
                    b.Navigation("Kitaplar");
                });
#pragma warning restore 612, 618
        }
    }
}
